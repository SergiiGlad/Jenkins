#!groovy

def lib = library identifier: 'my-shared-library@master', retriever: modernSCM(github(repository: 'Jenkins', repoOwner: 'SergiiGlad'))

def podLabel = "jenkins-worker-${UUID.randomUUID().toString()}"

properties([
  parameters([
    string(name: 'dockerTag', defaultValue: '', description: 'git tag or short commit from upstream build' )
  ])
])

helmTemplate(podLabel) {
  node(podLabel){

    git credentialsId: 'github_git',
      url: 'https://github.com/sergiiglad/web-delivery.git'
    
    // find list yaml files
    def yamlFilePathList = fileList('.')

    if ( yamlFilePathList ) println yamlFilePathList

    // List<SunStage>
    List stages = [] 

    yamlFilePathList.each {
        stages.add( sunClassLoad(it) )
    }

    stages.each {
      println( it.print() )
     
    }

    def prodList= []

    // Check changeSet prod release
    prodList = changeSetFiles()

    if ( isShortCommit(params.dockerTag) ) prodList.add( 'develop/dev-web.yaml' )

    if ( isBuildingTag(params.dockerTag) ) prodList.add( 'qa/qa-web.yaml' )

    // mock
    prodList=["prod-us1/web-prod-us1.yaml","prod-us2/web-prod-us2.yaml","develop/dev-web.yaml"] 

    if ( prodList ) println prodList

    stages.each { stage -> 
      prodList.each { prod -> 
          if ( stage.stageName == prod ) 
            if ( prod == 'develop/dev-web.yaml' || prod == 'qa/qa-web.yaml' )
              stage.initDeploy( prod, params.dockerTag ) 
            else
              stage.initDeploy( prod, readYaml(file: prod).image.tag )
      }
    }

    
    
    stages.each {
        println it.stageName
        it.deployHelmStage(this,steps)
        
    }
  }
}  